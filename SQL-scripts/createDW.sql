-- Section A â€“ Data Warehouse Schema

-- Create Table: SUPPLIER_DIM
CREATE TABLE SUPPLIER_DIM (
    SUPPLIER_ID VARCHAR2(6) NOT NULL,
    SUPPLIER_NAME VARCHAR2(30) NOT NULL,
    SUPPLIER_TYPE VARCHAR2(15) NOT NULL,
    CONSTRAINT SUPPLIER_DIM_PK PRIMARY KEY (SUPPLIER_ID),
    CONSTRAINT SUPPLIER_DIM_SUPPLIER_TYPE_CK CHECK (SUPPLIER_TYPE IN ('Local', 'International'))
);

-- Create Table: PRODUCT_CATEGORY_DIM
CREATE TABLE PRODUCT_CATEGORY_DIM (
    CATEGORY_ID VARCHAR2(4) NOT NULL,
    CATEGORY_NAME VARCHAR2(20) NOT NULL,
    CONSTRAINT PRODUCT_CATEGORY_DIM_PK PRIMARY KEY (CATEGORY_ID)
);

-- Create Table: PRICE_RANGE_DIM
CREATE TABLE PRICE_RANGE_DIM (
    PRICE_RANGE_ID VARCHAR2(2) NOT NULL,
    PRICE_RANGE_NAME VARCHAR2(8) NOT NULL,
    PRICE_MIN NUMBER(7,2) NOT NULL,
    PRICE_MAX NUMBER(7,2) NOT NULL,
    CONSTRAINT PRICE_RANGE_DIM_PK PRIMARY KEY (PRICE_RANGE_ID)
);

-- Create Table: PRODUCT_DIM
CREATE TABLE PRODUCT_DIM (
    PRODUCT_ID VARCHAR2(6) NOT NULL,
    PRODUCT_NAME VARCHAR2(30) NOT NULL,
    PRICE NUMBER(7,2) NOT NULL,
    CATEGORY_ID VARCHAR2(4) NOT NULL,
    PRICE_RANGE_ID VARCHAR2(2) NOT NULL,
    CONSTRAINT PRODUCT_DIM_PK PRIMARY KEY (PRODUCT_ID),
    CONSTRAINT PRODUCT_DIM_CATEGORY_FK FOREIGN KEY (CATEGORY_ID)
        REFERENCES PRODUCT_CATEGORY_DIM(CATEGORY_ID),
    CONSTRAINT PRODUCT_DIM_PRICE_RANGE_FK FOREIGN KEY (PRICE_RANGE_ID)
        REFERENCES PRICE_RANGE_DIM(PRICE_RANGE_ID)
);

-- Create Table: TRANSACTION_DATE_DIM
CREATE TABLE TRANSACTION_DATE_DIM (
    TRANSACTION_DATE_ID NUMBER(8,0) NOT NULL,
    TRANSACTION_DATE DATE NOT NULL,
    DAY NUMBER(2,0) NOT NULL,
    MONTH NUMBER(2,0) NOT NULL,
    YEAR NUMBER(4,0) NOT NULL,
    QUARTER NUMBER(1,0) NOT NULL,
    DAY_OF_WEEK NUMBER(1,0) NOT NULL,
    IS_WEEKDAY_FLAG CHAR(1) DEFAULT 'Y' NOT NULL,
    IS_HOLIDAY_FLAG CHAR(1) DEFAULT 'N' NOT NULL,
    CONSTRAINT TRANSACTION_DATE_DIM_PK PRIMARY KEY (TRANSACTION_DATE_ID),
    CONSTRAINT TRANSACTION_DATE_DIM_DAY_OF_WEEK_CK CHECK (DAY_OF_WEEK IN (1, 2, 3, 4, 5, 6, 7)),
    CONSTRAINT TRANSACTION_DATE_DIM_IS_WEEKDAY_FLAG_CK CHECK (IS_WEEKDAY_FLAG IN ('Y', 'N')),
    CONSTRAINT TRANSACTION_DATE_DIM_IS_HOLIDAY_FLAG_CK CHECK (IS_HOLIDAY_FLAG IN ('Y', 'N'))
);

-- Create Table: CHANNEL_DIM
CREATE TABLE CHANNEL_DIM (
    CHANNEL_ID VARCHAR2(3) NOT NULL,
    CHANNEL_DESCRIPTION VARCHAR2(20) NOT NULL,
    CHANNEL_TYPE VARCHAR2(10) NOT NULL,
    CONSTRAINT CHANNEL_DIM_PK PRIMARY KEY (CHANNEL_ID),
    CONSTRAINT CHANNEL_TYPE_CK CHECK (CHANNEL_TYPE IN ('Online', 'InStore'))
);

-- Create Table: REGION_DIM
CREATE TABLE REGION_DIM (
    REGION_ID VARCHAR2(4) NOT NULL,
    REGION_NAME VARCHAR2(10) NOT NULL,
    CONSTRAINT REGION_DIM_PK PRIMARY KEY (REGION_ID)
);

-- Create Table: CLIENT_DIM
CREATE TABLE CLIENT_DIM (
    CLIENT_ID VARCHAR2(4) NOT NULL,
    CLIENT_NAME VARCHAR2(30) NOT NULL,
    CLIENT_TYPE VARCHAR2(15) NOT NULL,
    REGION_ID VARCHAR2(4) NOT NULL,
    CONSTRAINT CLIENT_DIM_PK PRIMARY KEY (CLIENT_ID),
    CONSTRAINT CLIENT_DIM_CLIENT_TYPE_CK CHECK (CLIENT_TYPE IN ('Corporate', 'Individual')),
    CONSTRAINT CLIENT_DIM_REGION_FK FOREIGN KEY (REGION_ID)
        REFERENCES REGION_DIM(REGION_ID)
);

-- Create Table: PRODUCT_SUPPLIER_BRIDGE
CREATE TABLE PRODUCT_SUPPLIER_BRIDGE (
    SUPPLIER_ID VARCHAR2(6) NOT NULL,
    PRODUCT_ID VARCHAR2(6) NOT NULL,
    PRODUCT_COST NUMBER(7,2) NOT NULL,
    CONSTRAINT PRODUCT_SUPPLIER_BRIDGE_PK PRIMARY KEY (SUPPLIER_ID, PRODUCT_ID),
    CONSTRAINT PRODUCT_SUPPLIER_BRIDGE_SUPPLIER_FK FOREIGN KEY (SUPPLIER_ID)
        REFERENCES SUPPLIER_DIM(SUPPLIER_ID),
    CONSTRAINT PRODUCT_SUPPLIER_BRIDGE_PRODUCT_FK FOREIGN KEY (PRODUCT_ID)
        REFERENCES PRODUCT_DIM(PRODUCT_ID)
);

-- Create Table: SALES_FACT
CREATE TABLE SALES_FACT (
    TRANSACTION_ID VARCHAR2(8) NOT NULL,
    PRODUCT_ID VARCHAR2(6) NOT NULL,
    TRANSACTION_DATE_ID NUMBER(8,0) NOT NULL,
    CHANNEL_ID VARCHAR2(3) NOT NULL,
    CLIENT_ID VARCHAR2(4) NOT NULL,
    QUANTITY NUMBER(10,0) NOT NULL,
    SALES_VALUE NUMBER(12,2) NOT NULL,
    CONSTRAINT SALES_FACT_PK PRIMARY KEY (TRANSACTION_ID),
    CONSTRAINT SALES_FACT_PRODUCT_FK FOREIGN KEY (PRODUCT_ID)
        REFERENCES PRODUCT_DIM(PRODUCT_ID),
    CONSTRAINT SALES_FACT_TRANSACTION_DATE_FK FOREIGN KEY (TRANSACTION_DATE_ID)
        REFERENCES TRANSACTION_DATE_DIM(TRANSACTION_DATE_ID),
    CONSTRAINT SALES_FACT_CHANNEL_FK FOREIGN KEY (CHANNEL_ID)
        REFERENCES CHANNEL_DIM(CHANNEL_ID),
    CONSTRAINT SALES_FACT_CLIENT_FK FOREIGN KEY (CLIENT_ID)
        REFERENCES CLIENT_DIM(CLIENT_ID)
);

-- Create Indexes for SALES_FACT
CREATE INDEX SALES_FACT_PRODUCT_ID_IDX ON SALES_FACT (PRODUCT_ID);
CREATE INDEX SALES_FACT_TRANSACTION_DATE_ID_IDX ON SALES_FACT (TRANSACTION_DATE_ID);
CREATE INDEX SALES_FACT_CLIENT_ID_IDX ON SALES_FACT (CLIENT_ID);
CREATE INDEX SALES_FACT_CHANNEL_ID_IDX ON SALES_FACT (CHANNEL_ID);
